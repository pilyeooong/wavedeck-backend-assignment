version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: wavedeck-app
    volumes:
      - ./src:/usr/wavedeck-backend-assignment/src
      - ./logs:/usr/wavedeck-backend-assignment/logs
      - ./uploads:/usr/wavedeck-backend-assignment/uploads
      - /usr/wavedeck-backend-assignment/node_modules
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=test
      - DATABASE_PASSWORD=1234
      - DATABASE_NAME=wavedeck-development
      - REDIS_HOST=localhost
      - REDIS_PORT=6379
    depends_on:
      - mysql
      - redis
    restart: always

  mysql:
    image: mysql:8.4
    container_name: wavedeck-db
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: test
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: wavedeck-development
    volumes:
      - mysql_data:/var/lib/mysql

  mysql-test:
    image: mysql:8.4
    container_name: wavedeck-test-db
    ports:
      - '3307:3306'
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: test
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: wavedeck-test

  redis:
    image: redis:7.2
    container_name: wavedeck-redis
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes

volumes:
  mysql_data:
